<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Redis on 墨斯潘園</title>
        <link>http://yanwushuang.github.io/tags/redis/</link>
        <language>zh-CN</language>
        <author>Mospan</author>
        <rights>Copyright (c) 2016, mospan; all rights reserved.</rights>
        <updated>Thu, 02 Mar 2017 11:14:08 HKT</updated>
        
        <item>
            <title>openresty与redis实践</title>
            <link>http://yanwushuang.github.io/2017/03/02/openresty-redis-practices/</link>
            <pubDate>Thu, 02 Mar 2017 11:14:08 HKT</pubDate>
            <author>Mospan</author>
            <guid>http://yanwushuang.github.io/2017/03/02/openresty-redis-practices/</guid>
            <description>

&lt;h1 id=&#34;安装-a-id-sec-1-name-sec-1-a&#34;&gt;安装&lt;a id=&#34;sec-1&#34; name=&#34;sec-1&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;openresty安装-a-id-sec-1-1-name-sec-1-1-a&#34;&gt;openresty安装&lt;a id=&#34;sec-1-1&#34; name=&#34;sec-1-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;详见 &lt;a href=&#34;https://openresty.org/cn/installation.html&#34;&gt;openresty安装&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;redis安装-a-id-sec-1-2-name-sec-1-2-a&#34;&gt;redis安装&lt;a id=&#34;sec-1-2&#34; name=&#34;sec-1-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;执行如下命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update  
sudo apt-get install redis-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;详见 &lt;a href=&#34;http://www.jianshu.com/p/c8723b677304&#34;&gt;Ubuntu安装配置Redis&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;编写api-a-id-sec-2-name-sec-2-a&#34;&gt;编写API&lt;a id=&#34;sec-2&#34; name=&#34;sec-2&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;根据项目要求编写openresty+lua的增删改查API接口。&lt;/p&gt;

&lt;h1 id=&#34;测试-a-id-sec-3-name-sec-3-a&#34;&gt;测试&lt;a id=&#34;sec-3&#34; name=&#34;sec-3&#34;&gt;&lt;/a&gt;&lt;/h1&gt;

&lt;h2 id=&#34;发送请求-a-id-sec-3-1-name-sec-3-1-a&#34;&gt;发送请求&lt;a id=&#34;sec-3-1&#34; name=&#34;sec-3-1&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;使用curl命令发送http json请求:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;先写请求json&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;root@bj94:~/dr302client# cat add.json
{&lt;/p&gt;

&lt;p&gt;&amp;ldquo;www.example.com&amp;rdquo;: {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;quot;sub\_domain&amp;quot;: &amp;quot;@&amp;quot;,
    &amp;quot;record\_type&amp;quot;: &amp;quot;CNAME&amp;quot;,
    &amp;quot;record\_line&amp;quot;: &amp;quot;all&amp;quot;,
    &amp;quot;record\_line\_id&amp;quot;: &amp;quot;00000000&amp;quot;,
    &amp;quot;value&amp;quot;: &amp;quot;all.china.qiniu.qnydns.com&amp;quot;,
    &amp;quot;mx&amp;quot;: 1,
    &amp;quot;ttl&amp;quot;: 86400,
    &amp;quot;status&amp;quot;: &amp;quot;enable&amp;quot;,
    &amp;quot;weight&amp;quot;: 100
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;执行命令：&lt;/p&gt;

&lt;p&gt;curl -i -H &amp;lsquo;content-type: application/json&amp;rsquo; -X POST -d @add.json &lt;a href=&#34;http://dev.mgrconfig.api.qiniudns.com/qiniu/dr302/records/add&#34;&gt;http://dev.mgrconfig.api.qiniudns.com/qiniu/dr302/records/add&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;回复响应-a-id-sec-3-2-name-sec-3-2-a&#34;&gt;回复响应&lt;a id=&#34;sec-3-2&#34; name=&#34;sec-3-2&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;根据不同返回码表示操作结果。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;root@bj94:~/dr302client# curl -i -H &amp;lsquo;content-type: application/json&amp;rsquo; -X POST -d @addA.json &lt;a href=&#34;http://dev.mgrconfig.api.qiniudns.com/qiniu/dr302/records/add&#34;&gt;http://dev.mgrconfig.api.qiniudns.com/qiniu/dr302/records/add&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;HTTP/1.1 200 OK
Date: Thu, 09 Mar 2017 03:01:17 GMT
Content-Type: text/plain
Transfer-Encoding: chunked
Connection: keep-alive
Server: DR302-MGR&lt;/p&gt;

&lt;p&gt;{
    &amp;ldquo;status&amp;rdquo;:{
               &amp;ldquo;created_at&amp;rdquo;:&amp;ldquo;2017-03-09 11:01:17&amp;rdquo;,
               &amp;ldquo;code&amp;rdquo;:0,
               &amp;ldquo;message&amp;rdquo;:&amp;ldquo;success&amp;rdquo;
             },
    &amp;ldquo;record&amp;rdquo;:{
               &amp;ldquo;status&amp;rdquo;:&amp;ldquo;enable&amp;rdquo;,
               &amp;ldquo;key&amp;rdquo;:&amp;ldquo;www.example.com#all&amp;rdquo;,
               &amp;ldquo;name&amp;rdquo;:&amp;ldquo;@&amp;rdquo;
             }
}&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;查看存储-a-id-sec-3-3-name-sec-3-3-a&#34;&gt;查看存储&lt;a id=&#34;sec-3-3&#34; name=&#34;sec-3-3&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;执行命令:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(echo  &amp;quot;select 10&amp;quot;; echo &amp;quot;hgetall www.example.com#all&amp;quot;) | redis-cli -a cdnfusion -p 7648&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;避免中文乱码，加&amp;#x2013;raw选项：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(echo  &amp;quot;select 10&amp;quot;; echo &amp;quot;hgetall www.example.com#all&amp;quot;) | redis-cli -a cdnfusion -p 7648 --raw
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;显示如下:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;root@bj94:~/dr302client# (echo  &amp;ldquo;select 10&amp;rdquo;; echo &amp;ldquo;hgetall www.example.com#all&amp;rdquo;) | redis-cli -a cdnfusion -p 7648
OK
1.  &amp;ldquo;weight&amp;rdquo;
2.  &amp;ldquo;20&amp;rdquo;
3.  &amp;ldquo;record_type&amp;rdquo;
4.  &amp;ldquo;A&amp;rdquo;
5.  &amp;ldquo;record_line&amp;rdquo;
6.  &amp;ldquo;all&amp;rdquo;
7.  &amp;ldquo;status&amp;rdquo;
8.  &amp;ldquo;enable&amp;rdquo;
9.  &amp;ldquo;mx&amp;rdquo;
10. &amp;ldquo;1&amp;rdquo;
11. &amp;ldquo;value&amp;rdquo;
12. &amp;ldquo;1.1.1.1#10|2.2.2.2#20&amp;rdquo;
13. &amp;ldquo;ttl&amp;rdquo;
14. &amp;ldquo;86400&amp;rdquo;
15. &amp;ldquo;record_line_id&amp;rdquo;
16. &amp;ldquo;00000000&amp;rdquo;
17. &amp;ldquo;sub_domain&amp;rdquo;
18. &amp;ldquo;@&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;踩过的坑-a-id-sec-3-4-name-sec-3-4-a&#34;&gt;踩过的坑&lt;a id=&#34;sec-3-4&#34; name=&#34;sec-3-4&#34;&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;h3 id=&#34;table的深度与浅度拷贝-a-id-sec-3-4-1-name-sec-3-4-1-a&#34;&gt;table的深度与浅度拷贝&lt;a id=&#34;sec-3-4-1&#34; name=&#34;sec-3-4-1&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;现象&lt;/p&gt;

&lt;p&gt;当通过API批量获取配置列表时，发现不同的key获取的值是一样的， 但通过redis-cli获取是不一样且正确的。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;分析&lt;/p&gt;

&lt;p&gt;redis存储是正确的，很有可能是中间临时存储存在覆盖的问题， 如果table每次赋值都相当于内存拷贝那样Lua的性能就会大大降低，会不会table之间赋值就像C语言一样只赋值地址或指针。经网上查找发现table存在深度与浅度拷贝的区别。详见:&lt;a href=&#34;https://my.oschina.net/hqc17/blog/748709&#34;&gt;Lua实现深度拷贝&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;解决措施&lt;/p&gt;

&lt;p&gt;把中间的临时table变量放入当前语句块中并加local标识，猜测在当前语句块临时table可能会随时被释放掉，因此它赋值给其他作用域更大的变量时使用深拷贝。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;hgetall结果与lua-table转换-a-id-sec-3-4-2-name-sec-3-4-2-a&#34;&gt;hgetall结果与Lua table转换&lt;a id=&#34;sec-3-4-2&#34; name=&#34;sec-3-4-2&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;使用hgetall获取redis的内容需经转换后才能被Lua table使用。
转换关键代码如下:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; 1  local v = red:hgetall(innerk) 
 2  if v == nil then
 3      log(ERR, &amp;quot;get redis empty key: &amp;quot;, innerk)
 4      return nil
 5  end
 6  for key,val in pairs(v) do
 7     if key%2 ~= 0 then
 8        result[v[key]] = v[key+1];
 9     end
10  end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;nginx-worker权限问题-a-id-sec-3-4-3-name-sec-3-4-3-a&#34;&gt;nginx worker权限问题&lt;a id=&#34;sec-3-4-3&#34; name=&#34;sec-3-4-3&#34;&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;现象&lt;/p&gt;

&lt;p&gt;当使用init_worker_by_lua_file进行定时器任务时，发现不能打开或写入/usr/local/openresty/子目录下的文件， 而init_by_lua_file调用则正常。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;分析&lt;/p&gt;

&lt;p&gt;当把路径改为/tmp/目录下则运行都正常，经定位发现nginx master以root身份运行， 而nginx worker以nobody身份运行。
查看需要读写的文件路径， 发现只有root权限才能写。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;解决措施&lt;/p&gt;

&lt;p&gt;1） 发现代码以&amp;rdquo;r+&amp;ldquo;(更新模式,保存之前的数据)模式进行读文件，需改成&amp;rdquo;r&amp;rdquo;只读模式。
2） 把要写的文件路径改成其他可写，例如: chmod 777 data&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
